
1)  What is an Object  : object is the instance of the class. with the help of object we can set the values to the properties of the class and also can make access of methods

2) what is a class : class is the template or blue print of an object , it has properties and methods with logics are present.

3) what is multiple inheritance does java support it : when one class can derived from two or more class its called the multiple inheritance & Java did not support the multiple inheritance
        beacuse it creates ambiguity while calling parent constructor.

4) which collection classes are sorted by default : treeset and treemap are sorted by default.

5) how will u sort an array list : with the help of Collections.sort();

6) collection vs collections  : Collection is the interface                                         Collections is utility class
                                and it is use to storegroup of individual objects                     all methods of it is static
                                as a single collections                                          methods of collections is use to work on the collection
												e.g sort()



                           
7) difference between arraylist and vector :
Arraylist : it is class it implements list inteface , it is thread unsafe , it is not synchronous , it is fast .
Arraylist : it is class it implements list inteface , it is thread safe, it is synchronous , it is slow in execution


8) difference between add and offer  : Both java queue add () and offer () methods are available in the Queue interface and are used to add elements to the queue.
				     Preference will be given to queue’s Offer() method. The add() method internally just call the offer() method and does nothing extra.
And also, the add () method throws exception “java.lang.IllegalStateException: Queue full“, at the moment queue is full, whereas the offer() method returns a Boolean value false for the same in case the queue is of restricted capacity e.g arrayblockingqueue.


9) which method is used to retrieve and doesnt remove first element from the queue  : peek()

10) explain collections

11) which method is used to retrieve and remove first element from the queue  : pollFirst()

12) which collection in unordered : set , map 

13) can try have multiple catch blocks : yes

14) what is the use of finally block : finally block executes in any condition either error is throws or not

15) what is exception  : Exception is an unwanted or unexpected event, which occurs during the execution of a program

16) which is the top level class in exception herichry : Throwable

17) what is checked exception : exception at compile time called the checked exception e.g classnotfound , IOexception etc

18) root class for all classes in java : object

19) Object class methods : 11 methods : toString , hashCode() , clone() , equals() , finalize() ,getClass()

20) what is lambda expression :it is a short block of code which takes in parameters and returns a value , it is like method with no name

21) what is method reference :
Method reference is used to refer method of functional interface. It is compact  form of lambda expression. 

22) what is Functional Interface : interface with only one abstract methode

23) what is Optional Object in java : Optional object is used to represent null with absent value. This class has various utility methods to facilitate code to handle values as ‘available’ or ‘not available’ instead of checking null values

24) difference between comparable and comparator :


24) what is an abstract class, what is abstract method' : class which have one or more than one abstract methode called the abstract class , we cannot create object of abstract class
                                                         methode which is define using abstract key word without methode declaration only defination

25) static vs dynamic polymorphism : static poly is compile time poly and achive using methode overloding : methode with same name and different signature(no. of args,datatype of args,order of args) , inheritance not required
dynamic poly is runtime poly and achive using methode overriding: methode with same name and same signature , inheritance is necessary. 

26) what is overloading compile time poly and achive using methode overloding : methode with same name and different signature(no. of args,datatype of args,order of args) , inheritance not required

27) what is polymorphism : when one methode can be present in many forms and can act different for different condition called polymorphism

28) what is interface : to achieve abstraction interface is used , it is a template of abstract class and define using interface keyword , and can contain abstract methods

29) can an abstract method be private ? : no we can't make methode private of abstract because we cannot do overriding then

30) can an abstract method be final ? no abstract methode has to override hence not

31) can i extend from a final class : NO FINAL CLASS  cannot be extend

32) what is blank final variable : final variable without initialization

33) can a abstract method be static no abstract methode cannot be static as it required overriding

34) what is a local variable : variable whose scope is local means can access inside the block only

35) what is type casting : changing datatypes

36) what is a wrapper class :  wrapper class in Java provides the mechanism to convert primitive into object and object into primitive

37) what is jvm : JVM is responsible for executing the java program line by line

38)is jvm platform independent: yes

39)can a local variable be static: no as static refers to class level

40)local varibal has default value ?  : no , we have to initialise it

41)how many wrapper classes : 8

42) what is jre : java run time environment it has jvm inside it 

difference between jvm and jre

43) what is instance var : Instance variables in Java are non-static variables which are defined in a class outside any method, constructor or a block. 

44) copies of instance vars

45) what is boxing : converting wrapper to primitive and primitive to wrapper

46) what is generics: Java Generic methods and generic classes enable programmers to specify, with a single method declaration, a set of related methods, or with a single class declaration, a set of related types, respectively.
Generics also provide compile-time type safety that allows programmers to catch invalid types at compile time.

47) which collection class allows concurrent modification : ConcurrentHashMap

48) can a non static block use static variable : yes

49) can a static function use non static var : no

50) what is use of this keyword : it referece to the current object of that class

51) what is constructor: it is same as the class name and invoke automatically when the instance of the class is create.

52) throw vs throws: 

53) which keyword is used to raise an exception : throw

54) use of super keyword : refferes to the parent class , can use to access the properties and methods of parent class

55) implicit cast vs explicit : Implicit type casting is done internally by java compiler whereas, explicit type casting is done by the programmer . e.g int can be convert into long implicitily but , long cannot be convert into int implicitly we have to typecast it explicitly

56) def value of Boolean:false

57) hashtable vs hashmap: HashMap is non-syncronized and is not thread safe while HashTable is thread safe and is synchronized. HashMap allows one null key and values can be null whereas HashTable doesn't allow null key or value. HashMap is faster than HashTable. HashMap iterator is fail-safe where HashTable iterator is not fail-safe.

58) which collection doesnt allow null key or null value : HashTable

59) what is map : it is an interface , it stores the objects in key and value form

60)what is priority queue : a priority Queue is an extension of the queue 
Every item has a priority associated with it.
An element with high priority is dequeued before an element with low priority.
If two elements have the same priority, they are served according to their order in the queue.

61)what is deque :it is an interface and The Deque is related to the double-ended queue that supports the addition or removal of elements from both ends it can use as queue or stack 

62)iterator vs enumeration :
Iterator: It is a universal iterator as we can apply it to any Collection object. By using Iterator, we can perform both read and remove operations. It is an improved version of Enumeration with the additional functionality of remove-ability of an element. 
Iterator must be used whenever we want to enumerate elements in all Collection framework implemented interfaces like Set, List, Queue, Deque and also in all implemented classes of Map interface. Iterator is the only cursor available for entire collection framework. 

Enumeration: Enumeration (or enum) is a user-defined data type. It is mainly used to assign names to integral constants, the names make a program easy to read and maintain. In Java (from 1.5), enums are represented using the enum data type. Java enums are more powerful than C/C++ enums. In Java, we can also add variables, methods and constructors to it. The main objective of the enum is to define our own data types(Enumerated Data Types). 





































































































































































































































































































































































































































































































































































































































































































































































































































































































































































